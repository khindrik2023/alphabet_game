-- up to 53

function love.load()
    wf = require 'libraries/windfield/windfield'
    world = wf.newWorld(0, 1500, false)
    world:setQueryDebugDrawing(true)

    world:addCollisionClass('Platform')
    world:addCollisionClass('Player')
    world:addCollisionClass('Danger')

    player = world:newRectangleCollider(360, 100, 80, 80, {collision_class = 'Player'})
    player:setFixedRotation(true)
    player.speed = 240
    
    platform = world:newRectangleCollider(250, 400, 300, 100, {collision_class = 'Platform'})
    platform:setType('static')

    dangerZone = world:newRectangleCollider(0, 550, 800, 50, {collision_class = 'Danger'})
    dangerZone:setType('static')
end

function love.update(dt)
    world:update(dt)

    if player.body then
        local px, py = player:getPosition()
        if love.keyboard.isDown('right') then
            player:setX(px + player.speed * dt)
        end
        if love.keyboard.isDown('left') then
            player:setX(px - player.speed * dt)
        end

        if player:enter('Danger') then
            player:destroy()
        end
    end
end

function love.draw()
    world:draw()
end

function love.keypressed(key)
    if key == 'up' then
        local colliders = world:queryRectangleArea(player:getX()-40, player:getY()+40, 80, 2, {'Platform'})
        if #colliders > 0 then
            player:applyLinearImpulse(0, -10000)
        end
    end
end

function love.mousepressed(x, y, button)
    if button == 1 then
        local colliders = world:queryCircleArea(x, y, 200, {'Platform', 'Danger'})
        if #colliders > 0 then
            for i,c in ipairs(colliders) do
                c:destroy()
            end
        end
    end
end



--- up to 59
--- main.lua
function love.load()
    anim8 = require 'libraries/anim8/anim8'

    sprites = {}
    sprites.playerSheet = love.graphics.newImage('sprites/playerSheet.png')

    local grid = anim8.newGrid(205, 203, sprites.playerSheet:getWidth(), sprites.playerSheet:getHeight())

    animations = {}
    animations.idle = anim8.newAnimation(grid('1-1', 1), 0.1)
    animations.run = anim8.newAnimation(grid('2-4', 1), 0.1)
    animations.jump = anim8.newAnimation(grid('5-5', 1), 0.1)

    wf = require 'libraries/windfield/windfield'
    world = wf.newWorld(0, 3000, false)
    world:setQueryDebugDrawing(true)

    world:addCollisionClass('Platform')
    world:addCollisionClass('Player')
    world:addCollisionClass('Danger')

    require('player')    
    
    platform = world:newRectangleCollider(250, 400, 300, 100, {collision_class = 'Platform'})
    platform:setType('static')

    dangerZone = world:newRectangleCollider(0, 550, 800, 50, {collision_class = 'Danger'})
    dangerZone:setType('static')
end

function love.update(dt)
    world:update(dt)
    playerUpdate(dt)
end

function love.draw()
    world:draw()
    drawPlayer()
end

function love.keypressed(key)
    if key == 'up' then
        if player.grounded == true then
            player:applyLinearImpulse(0, -20000)
            player.animation = animations.jump
        end
    end
end

function love.mousepressed(x, y, button)
    if button == 1 then
        local colliders = world:queryCircleArea(x, y, 200, {'Platform', 'Danger'})
        if #colliders > 0 then
            for i,c in ipairs(colliders) do
                c:destroy()
            end
        end
    end
end

-- player.lua
player = world:newRectangleCollider(360, 100, 80, 100, {collision_class = 'Player'})
player:setFixedRotation(true)
player.animation = animations.idle
player.speed = 240
player.isMoving = false
player.direction = 1
player.grounded = true


function playerUpdate(dt)

    if player.body then
        local colliders = world:queryRectangleArea(player:getX()-40, player:getY()+50, 80, 2, {'Platform'})
        if #colliders > 0 then
            player.grounded = true
        else
            player.grounded = false
        end

        player.isMoving = False

        local px, py = player:getPosition()
        if love.keyboard.isDown('right') then
            player:setX(px + player.speed * dt)
            player.isMoving = true
            player.direction = 1
        end
        if love.keyboard.isDown('left') then
            player:setX(px - player.speed * dt)
            player.isMoving = true
            player.direction = -1
        end

        if player:enter('Danger') then
            player:destroy()
        end
    end

    if player.grounded == true then
        if player.isMoving == true then
            player.animation = animations.run
        else 
            player.animation = animations.idle
        end
    else
        player.animation = animations.jump
    end

    player.animation:update(dt)
end

function drawPlayer()
    local px, py = player:getPosition()
    player.animation:draw(sprites.playerSheet, px, py, nil, .5*player.direction, .5, 100, 100)
end



-- nov 14

local colliders = world:queryRectangleArea(flagX_a, flag_a, 200, 200, {'Player'})
    if #colliders > 0 then
        if currentLevel == 'level2' then
            loadMap('level1')
        end
    end

